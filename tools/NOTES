Selecting data set. Projects have the following properties:
* Project size (measured by LOC and no. files)
* Team size (measured by no. contributors and developers)
* Programming language (measured by LOC per language)
* Repository (e.g., GIT, Subversion, CVS)
* Project age

Ohloh team size categories:
* 0: No recent activity
* 1: Single
* 2-3: Small
* 4-6: Average
* 7-27: Large active
* 28+: Very large active

Our universe is Ohloh.net:
* Ohloh.net is tracking 661,110 projects.

Repositories:
* 46% subversion (292,497)
* 38% GIT (243,688)
* 9% CVS (62,675)
* 2% Bazaar (12,835)
* 2% Mercurial (17,459)
* adds up to 97% (629,154)

Using a selection of 250 projects, we need the following distribution of repositories:
* subversion (116)
* git (97)
* cvs (25)
* mercurial (7)
* bazaar (5)

Activity (available to 86,995 (13.16%) projects):
* 46.1% inactive (40,105)
* 24.2% very low (21,053)
* 9.9% new (8,613)
* 8.2% low (7,134)
* 7.9% moderate (6,873)
* 2.4% high (2,088)
* 1.2% very high (1,044)
* adds up to 99.9% (86,910)

Using a selection of 250 projects, we need the following distribution of activity index:
* Inactive (15)
* Very low (8)
* New (3)
* Low (3)
* Moderate (3)
* High (1)
* Very high (0)
* Unknown (217)

Using a selection of 11,767 projects as determined by Bruntink and tested against the methods of Nagappan for coverage;
Main languages (75)
* 18.36% java (2,161)
* 16.13% c (1,898)
* 12.35% c++ (1,453)
* 11.18% python (1,316)
* 10.3% php (1,212)
* 7.52% javascript (885)
* 5.55% c# (653)
* 3.58% perl (421)
* 2.93% ruby (345)
* 2.03% shell (239)
* 0.88% objective-c (104)
* 0.76% pascal (90)
* 0.71% actionscript (84)
* 0.54% sql (64)
* 0.43% lua (51)
* 0.42% xsl (50)
* 0.39% emacs (46)
* 0.38% haskell (45)
* 0.37% erlang (44)
* 0.35% groovy (41)
* 0.34% scala (40)
* 0.34% vala (40)
* 0.31% lisp (36)
* 0.27% tcl (32)
* 0.25% objective (30)
* 0.25% scheme (29)
* 0.25% visual (29)
* 0.22% ada (26)
* 0.21% vim (25)
* 0.17% xml (19)
* 0.16% d (19)
* 0.15% haxe (18)
* 0.14% dos (17)
* 0.14% ebuild (17)
* 0.12% assembly (14)
* 0.11% modula2 (13)
* 0.10% xaml (12)
* 0.08% fortran (10)
* 0.08% go (10)
* 0.08% limbo (10)
* 0.08% eiffel (9)
* 0.08% f# (9)
* 0.08% matlab (9)
* 0.08% r (9)
* 0.07% clojure (8)
* 0.07% cmake (8)
* 0.06% coffeescript (7)
* 0.04% structured (5)
* 0.04% latex (5)
* 0.03% html (4)
* 0.03% objective-j (4)
* 0.03% smalltalk (4)
* 0.03% c/c++ (3)
* 0.03% css (3)
* 0.03% qml (3)
* 0.02% awk (2)
* 0.02% blitzmax (2)
* 0.02% coq (2)
* 0.02% dtx (2)
* 0.02% exheres (2)
* 0.02% nix (2)
* 0.02% puppet (2)
* 0.02% rebol (2)
* 0.01% classic (1)
* 0.01% dylan (1)
* 0.01% ec (1)
* 0.01% factor (1)
* 0.01% forth (1)
* 0.01% logtalk (1)
* 0.01% make (1)
* 0.01% nsis (1)
* 0.01% pike (1)
* 0.01% prolog (1)
* 0.01% racket (1)
* 0.01% stratego (1)
* adds up to 100% (11,767 projects)

Having a selection of 250 projects, the following language distributions need to be present:
* java (46)
* c (40)
* c++ (31)
* python (28)
* php (26)
* javascript (19)
* c# (14)
* perl (9)
* ruby (7)
* shell (5)
* objective-c (2)
* pascal (2)
* actionscript (2)
* sql (1)
* lua (1)
* xsl (1)
* emacs (1)
* haskell (1)
* erlang (1)
* groovy (1)
* scala (1)
* vala (1)
* lisp (1)
* tcl (1)
* objective (1)
* scheme (1)
* visual (1)
* ada (1)
* vim (1)

Ohloh totals.
Programming languages by no. projects (101):
* xml (205,003)
* html (172,733)
* css (134,084)
* javascript (126,812)
* shell (82,317)
* java (78,529)
* c (72,291)
* make (67,747)
* python (65,183)
* c++ (58,632)
* ruby (51,288)
* php (50,423)
* c# (44,440)
* bat (35,793)
* sql (35,542)
* perl (31,807)
* metafont (24,843)
* xaml (23,035)
* autoconf (20,843)
* automake (16,567)
* objective-c (16,028)
* xmlschema (15,787)
* xslt (14,694)
* tex (12,115)
* actionscript (9,058)
* assembler (8,014)
* modula2 (7,575)
* cmake (7,533)
* visualbasic (6,503)
* haml (5,202)
* lua (5,186)
* coffeescript (4,961)
* emacslisp (4,443)
* pascal (4,408)
* dmd (4,022)
* mxml (3,853)
* vim (3,569)
* idl-pvwave (3,331)
* awk (3,305)
* groovy (3,206)
* matlab (3,055)
* scala (3,027)
* scheme (2,958)
* haskell (2,820)
* r (2,644)
* tcl (2,218)
* erlang (2,180)
* nsis (2,141)
* clojure (2,080)
* dcl (1,969)
* lisp (1,838)
* glsl (1,826)
* golang (1,690)
* ocaml (1,258)
* fortranfixed (1,177)
* fortranfree (1,150)
* puppet (1,003)
* f# (990)
* ada (822)
* ebuild (773)
* structured-basic (710)
* haxe (681)
* vala (541)
* cuda (518)
* octave (483)
* qml (412)
* objective-j (406)
* vhdl (387)
* jam (386)
* stratego (351)
* eiffel (331)
* boo (280)
* ec (279)
* forth (256)
* scilab (251)
* smalltalk (237)
* metapost (217)
* rexx (212)
* coq (189)
* classic-basic (175)
* limbo (154)
* prolog (136)
* clearsilver (119)
* racket (110)
* rust (92)
* pike (91)
* blitzmark (87)
* tex-dtx (87)
* branfuck (78)
* nix (70)
* rebol (69)
* genie (52)
* cncpp (46)
* factor (41)
* augeas (32)
* exheres (30)
* modula3 (27)
* dylan (22)
* logtalk (19)
* oberon (7)
* chaiscript (6)
* bfpp (3)

LOC Churn is an important metric. This is not included in the activity data that can be collected from Ohloh.
Ohloh provides LOC added and removed, but not LOC modified.
Therefore, I would need to make (or find) a tool that checks out the source code repositories of the projects under
study and gather LOC modified facts.