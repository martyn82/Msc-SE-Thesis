Wavelet_cum.R: Applies discrete wavelet transform and stores the results in folder “wavelet_cum”
Similar_sequence_analytics.R: Identifies similarities in the transformed data (uses data from folder “wavelet_cum”)
Similar_sequence_popular.R: Counts the occurrences of similar sections identified by the previous script.

The template section and locations of the section in projects are output to file sim.data.csv

Wavelets are applied on commit data as follows:

Time series          | Variable                          | Description
---------------------+-----------------------------------+------------------------------------------------
Date                 | Active developers                 | Project team size per week
                     | Cumulative developers             | Project team growth per week
                     | Cumulative LOC added              | LOC addition growth per week
                     | Cumulative LOC churn              | LOC churn growth per week
                     | Cumulative LOC modified           | LOC modification growth per week
                     | Cumulative LOC removed            | LOC removal growth per week
                     | LOC                               | LOC size per week
                     | Relative date progress            | 
                     | Relative LOC churn progress       | 
                     | Relative team size                | 
                     | Files                             | Mean files per week
---------------------+-----------------------------------+------------------------------------------------
Cumulative LOC churn | Active developers                 | Developers per 1k LOC
                     | Cumulative developers             | Project team growth per 1k LOC
                     | Cumulative LOC added              | LOC addition growth per 1k LOC
                     | Cumulative LOC modified           | LOC modification growth per 1k LOC
                     | Cumulative LOC removed            | LOC removal growth per 1k LOC
                     | LOC                               | LOC size per 1k LOC
                     | Relative date progress            | 
                     | Relative LOC churn progress       | 
                     | Relative team size                | 
                     | Files                             | Mean files per 1k LOC
                     | Commits                           | Number of commits per 1k LOC (commit density)
---------------------+-----------------------------------+------------------------------------------------

Difference in data set (measured at Mon March 10, 2014 14:28):
- Karus: 63 projects, 153 months, mean 2.4 months per project (min and max unknown).
  (built from 124,799 commits, mean 1,980 commits per project, max 12,127 commits per project, min 1 commit per project)
- Me: 250 projects, 26,914 months, mean 107.6 months per project, max 296 months per project, min 6 months per project.

Using Date as timeseries, Karus aggregated data per 7 days period.
Using LOC churn as timeseries, Karus aggregated data per 1k LOC.
